   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    19998    0.012    0.000    0.041    0.000 <frozen importlib._bootstrap>:2264(_handle_fromlist)
        1    0.000    0.000 1082.569 1082.569 <string>:1(<module>)
  4099590    2.133    0.000   17.139    0.000 _methods.py:25(_amax)
  4099590    1.751    0.000   11.404    0.000 _methods.py:28(_amin)
  8199180    3.826    0.000   39.490    0.000 _methods.py:31(_sum)
    39996    0.019    0.000    0.208    0.000 _methods.py:34(_prod)
    39996    0.017    0.000    0.190    0.000 _methods.py:37(_any)
  4119588    2.015    0.000   25.825    0.000 _methods.py:40(_all)
  4099590   77.984    0.000  453.767    0.000 _multivariate.py:138(__init__)
  4099590    6.263    0.000    8.700    0.000 _multivariate.py:175(__init__)
    19998    0.007    0.000    0.007    0.000 _multivariate.py:196(_get_random_state)
  4099590    7.919    0.000    9.114    0.000 _multivariate.py:31(_squeeze_output)
  4099590   11.334    0.000  415.299    0.000 _multivariate.py:331(__init__)
  4099590    6.141    0.000  940.587    0.000 _multivariate.py:335(__call__)
  4119588   21.999    0.000   48.019    0.000 _multivariate.py:346(_process_parameters)
  4079592    7.717    0.000   19.716    0.000 _multivariate.py:406(_process_quantiles)
  4079592   32.853    0.000   66.754    0.000 _multivariate.py:424(_logpdf)
  4099590   20.385    0.000   58.454    0.000 _multivariate.py:43(_eigvalsh_to_eps)
    19998    0.055    0.000    3.707    0.000 _multivariate.py:503(rvs)
  4099590   17.564    0.000  934.446    0.000 _multivariate.py:558(__init__)
  4079592    8.630    0.000  104.167    0.000 _multivariate.py:596(logpdf)
  4079592   13.056    0.000  117.223    0.000 _multivariate.py:602(pdf)
    19998    0.024    0.000    3.731    0.000 _multivariate.py:605(rvs)
  4099590   11.826    0.000   48.008    0.000 _multivariate.py:78(_pinv_1d)
  4099590   19.658    0.000   20.750    0.000 _multivariate.py:95(<listcomp>)
  4099590    2.438    0.000    2.438    0.000 _util.py:122(check_random_state)
  4119588   27.164    0.000   83.340    0.000 _util.py:141(_asarray_validated)
  4119588    2.357    0.000    4.634    0.000 base.py:887(isspmatrix)
  4119588   17.055    0.000   36.896    0.000 blas.py:177(find_best_blas_type)
  4119588    2.299    0.000    2.299    0.000 blas.py:206(<listcomp>)
  4119588   24.074    0.000   67.259    0.000 blas.py:223(_get_funcs)
     9999    0.041    0.000    0.056    0.000 copy.py:67(copy)
  4119588    1.533    0.000    2.319    0.000 core.py:6042(isMaskedArray)
  4099590   55.588    0.000  221.989    0.000 decomp.py:202(eigh)
    19998    0.416    0.000    2.116    0.000 decomp_svd.py:15(svd)
  4099590   70.617    0.000  395.265    0.000 doccer.py:12(docformat)
  4099590  157.468    0.000  247.863    0.000 doccer.py:128(indentcount_lines)
  8199180   12.301    0.000   57.506    0.000 fromnumeric.py:1743(sum)
    39996    0.066    0.000    0.343    0.000 fromnumeric.py:1892(any)
  4099590    5.208    0.000   22.348    0.000 fromnumeric.py:2180(amax)
  4099590    3.472    0.000   14.876    0.000 fromnumeric.py:2271(amin)
    39996    0.047    0.000    0.255    0.000 fromnumeric.py:2395(prod)
  4119588   16.934    0.000   49.223    0.000 function_base.py:970(asarray_chkfinite)
    19998    0.078    0.000    0.078    0.000 getlimits.py:245(__init__)
    19998    0.015    0.000    0.015    0.000 getlimits.py:270(max)
  4099590    5.856    0.000    6.974    0.000 getlimits.py:94(__new__)
  4119588    3.263    0.000   70.522    0.000 lapack.py:405(get_lapack_funcs)
    19998    0.461    0.000    0.892    0.000 lapack.py:447(_compute_lwork)
    19998    0.014    0.000    0.014    0.000 lapack.py:466(<listcomp>)
  4119588    0.970    0.000    0.970    0.000 misc.py:169(_datacopied)
 24657534   16.850    0.000   45.642    0.000 numeric.py:414(asarray)
    39996    0.040    0.000    0.051    0.000 numeric.py:484(asanyarray)
  4119588    1.938    0.000    1.938    0.000 numerictypes.py:1015(<listcomp>)
  4119588    0.559    0.000    0.559    0.000 numerictypes.py:1016(<listcomp>)
  8239176    3.697    0.000    4.505    0.000 numerictypes.py:942(_can_coerce_all)
  4119588    7.756    0.000   14.758    0.000 numerictypes.py:964(find_common_type)
  3999600   13.749    0.000 1046.151    0.000 run.py:55(likelihood1)
    39996    5.743    0.000 1052.259    0.026 run.py:58(prob_density)
    39996    0.401    0.000   21.043    0.001 run.py:84(<lambda>)
     9999    0.170    0.000    8.668    0.001 run.py:85(<lambda>)
        1    0.303    0.303 1082.569 1082.569 samplers.py:11(super_metropolis_hastings)
  4099590    5.050    0.000   11.647    0.000 type_check.py:237(iscomplexobj)
  8199180    9.030    0.000    9.030    0.000 {built-in method abs}
 28817118   44.316    0.000   44.316    0.000 {built-in method array}
  4079592    7.298    0.000    7.298    0.000 {built-in method dot}
        1    0.000    0.000 1082.569 1082.569 {built-in method exec}
  4169583    2.002    0.000    2.002    0.000 {built-in method getattr}
    19998    0.029    0.000    0.029    0.000 {built-in method hasattr}
 20557944   10.849    0.000   10.849    0.000 {built-in method isinstance}
  4109589    2.337    0.000    2.337    0.000 {built-in method issubclass}
520767919   28.320    0.000   28.320    0.000 {built-in method len}
245975400   35.348    0.000   35.348    0.000 {built-in method min}
    39997    0.104    0.000    0.104    0.000 {built-in method zeros}
  4119588    3.107    0.000   28.932    0.000 {method 'all' of 'numpy.ndarray' objects}
    39996    0.036    0.000    0.226    0.000 {method 'any' of 'numpy.ndarray' objects}
 57434256    6.374    0.000    6.374    0.000 {method 'append' of 'list' objects}
    19998    0.039    0.000    0.039    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
 16398360   26.734    0.000   26.734    0.000 {method 'expandtabs' of 'str' objects}
    10000    0.007    0.000    0.007    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
 12368763    3.426    0.000    3.426    0.000 {method 'get' of 'dict' objects}
  4119588    1.812    0.000    1.812    0.000 {method 'index' of 'list' objects}
  4099590    0.729    0.000    0.729    0.000 {method 'items' of 'dict' objects}
 12298770    4.006    0.000    4.006    0.000 {method 'join' of 'str' objects}
  4099590    0.808    0.000    0.808    0.000 {method 'lower' of 'str' objects}
319768020   30.639    0.000   30.639    0.000 {method 'lstrip' of 'str' objects}
    19998    0.901    0.000    3.394    0.000 {method 'multivariate_normal' of 'mtrand.RandomState' objects}
 20597940   84.495    0.000   84.495    0.000 {method 'reduce' of 'numpy.ufunc' objects}
 16398360   39.213    0.000   39.213    0.000 {method 'splitlines' of 'str' objects}
  4079592    1.184    0.000    1.184    0.000 {method 'squeeze' of 'numpy.generic' objects}
    19998    0.011    0.000    0.011    0.000 {method 'squeeze' of 'numpy.ndarray' objects}
    19998    0.019    0.000    0.019    0.000 {method 'uniform' of 'mtrand.RandomState' objects}
    10000    0.214    0.000    0.214    0.000 {method 'write' of '_io.TextIOWrapper' objects}
